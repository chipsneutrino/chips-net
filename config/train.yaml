---
# Standard model training configuration file

# Define the task to be "train" 
task: "train"

# The "train" task requires 4 types of variables used to define the configuration
# - exp: the training experiment output directory
# - data: the input data and how it should be used
# - model: the model to train
# - trainer: how the trainer should run

exp:
    name: "beam"
    output_dir: "./data/models/"
    comet: False

data:
    # The directories from which to take input data
    input_dirs:
        #- "./data/input/chips_1200/beam_all_nuel/"
        #- "./data/input/chips_1200/beam_all_anuel/"
        #- "./data/input/chips_1200/beam_all_numu/"
        #- "./data/input/chips_1200/beam_all_anumu/"
        - ./data/input/chips_1200/beam_nuel_cccoh/
        - ./data/input/chips_1200/beam_nuel_nccoh/
        - ./data/input/chips_1200/beam_nuel_ccdis/
        - ./data/input/chips_1200/beam_nuel_ncdis/
        - ./data/input/chips_1200/beam_nuel_ccqel/
        - ./data/input/chips_1200/beam_nuel_ncqel/
        - ./data/input/chips_1200/beam_nuel_ccres/
        - ./data/input/chips_1200/beam_nuel_ncres/
        - ./data/input/chips_1200/beam_nuel_ccmec/
        - ./data/input/chips_1200/beam_numu_cccoh/
        - ./data/input/chips_1200/beam_numu_nccoh/
        - ./data/input/chips_1200/beam_numu_ccdis/
        - ./data/input/chips_1200/beam_numu_ncdis/
        - ./data/input/chips_1200/beam_numu_ccqel/
        - ./data/input/chips_1200/beam_numu_ncqel/
        - ./data/input/chips_1200/beam_numu_ccres/
        - ./data/input/chips_1200/beam_numu_ncres/
        - ./data/input/chips_1200/beam_numu_ccmec/
        #- "./data/input/chips_1200/cosmic_all/"
    # Should the data reader, create the full set of parameters from file?
    extra_vars: False
    # Does the input data contain all possible input channels?
    all_chan: True
    # Should the images be stacked into a single tensor?
    stack: True
    # Which channels should be active?
    channels: [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    # How much should each channel be randomly scaled?
    rand: [0.05, 0.05, 0.05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    # How much should each channel be randomly shifted?
    shift: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    # The input image size
    img_size: [64, 64, 3]
    # How to scale each of the reco parameters [vtxX, vtxY, vtxZ, dirTheta, dirPhi]
    par_scale: [1250.0, 1250.0, 600.0, 1.0, 180.0]

model: 
    name: "beam"  # "parameter", "cosmic", "beam", "multi_simple", "multi"
    labels: ["t_all_cat"]  # ["t_nuEnergy"], ["t_cosmic_cat"], ["t_all_cat"], ["t_all_cat", "t_nuEnergy"], ["t_all_cat", "t_nuEnergy"]
    reco_pars: False
    lr: 0.0001
    lr_decay: 0.0
    dense_units: 512
    dropout: 0.3
    kernel_size: 3
    filters: 64
    precision_policy: "float32"

trainer:
    train_examples: 1000000  # Make it a multiple of the batch size
    val_examples: 160000  # Make it a multiple of the batch size
    test_examples: 160000  # Make it a multiple of the batch size
    batch_size: 64
    epochs: 5
    tb_update: 1000
    steps_per_epoch: -1
    es_delta: 0.01
    es_epochs: 3